<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.tiatus</groupId>
        <artifactId>tiatus</artifactId>
        <version>1.0.2-SNAPSHOT</version>
    </parent>
    <artifactId>server</artifactId>
    <name>server</name>
    <packaging>war</packaging>

    <properties>
        <resteasy.version>3.0.8.Final</resteasy.version>
        <sonar.javascript.coveragePlugin>lcov</sonar.javascript.coveragePlugin>
        <sonar.javascript.lcov.reportPath>target/coverage/lcov.info</sonar.javascript.lcov.reportPath>
        <sonar.exclusions>
            src/main/webapp/public/js/**,src/main/typescript/**/*.spec.ts,src/main/typescript/**/*.e2e.ts
        </sonar.exclusions>
        <sonar.sources>src/main/java,src/main/webapp,src/main/typescript</sonar.sources>
        <sonar.tests>src/test/javascript,src/test/e2e,src/test/java</sonar.tests>
        <sonar.tests.inclusions>src/main/typescript/**/*.spec.ts</sonar.tests.inclusions>
        <sonar.ts.tslintconfigpath>tslint.json</sonar.ts.tslintconfigpath>
        <sonar.ts.lcov.reportpath>target/ts-coverage/lcov.info</sonar.ts.lcov.reportpath>
        <sonar.genericcoverage.unitTestReportPaths>target/js/protractor.xml,target/js/TESTS.xml
        </sonar.genericcoverage.unitTestReportPaths>
        <docker.not-stop-instances>false</docker.not-stop-instances>
        <ui.skip>true</ui.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>            
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-artemis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-jakarta-server</artifactId>
            <version>2.31.2</version>
        </dependency>

        <dependency>
            <groupId>org.tiatus</groupId>
            <artifactId>service</artifactId>
            <version>1.0.2-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <scope>test</scope>
        </dependency> -->

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.11</version>
                <executions>
                    <execution>
                        <id>get-local-ip</id>
                        <goals>
                            <goal>local-ip</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                     <skip>${ui.skip}</skip>
                </configuration>
                <executions>

                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v18.19.0</nodeVersion>
                            <npmVersion>10.2.3</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                            <environmentVariables>
                                <TARGET>${project.build.directory}/${project.build.finalName}</TARGET>
                            </environmentVariables>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm run tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run test</arguments>
                        </configuration>
                    </execution>

                    <!--<execution>-->
                    <!--<id>npm run integration tests</id>-->
                    <!--<phase>integration-test</phase>-->
                    <!--<goals>-->
                    <!--<goal>npm</goal>-->
                    <!--</goals>-->
                    <!--<configuration>-->
                    <!--<skip>${docker.skip}</skip>-->
                    <!--<arguments>run integration-test &#45;&#45; &#45;&#45;baseUrl=http://${local.ip}:7080</arguments>-->
                    <!--</configuration>-->
                    <!--</execution>-->
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.fabric8.version}</version>
                <configuration>
                    <logDate>default</logDate>
                    <autoPull>once</autoPull>
                    <skip>${docker.skip}</skip>
                    <images>
                        <image>
                            <alias>postgres</alias>
                            <name>jreynolds/postgresql-tiatus</name>
                            <build>
                                <dockerFileDir>postgresql</dockerFileDir>
                            </build>
                            <run>
                                <ports>
                                    <port>6432:5432</port>
                                </ports>
                                <wait>
                                    <log>database system is ready to accept connections</log>
                                    <time>60000</time>
                                </wait>
                                <log>
                                    <prefix>DB</prefix>
                                    <color>yellow</color>
                                </log>
                            </run>
                        </image>
                        <image>
                            <alias>activemq-artemis</alias>
                            <name>jreynolds/activemq-artemis-tiatus</name>
                            <build>
                                <dockerFileDir>activemq-artemis</dockerFileDir>
                            </build>
                            <run>
                                <ports>
                                    <port>61616:61616</port>
                                </ports>
                                <wait>
                                    <log>HTTP Server started at</log>
                                    <time>300000</time>
                                </wait>
                                <log>
                                    <prefix>MQ</prefix>
                                    <color>yellow</color>
                                </log>
                                <links>
                                    <link>postgres:db</link>
                                </links>
                            </run>
                        </image>
                        <image>
                            <alias>selenium</alias>
                            <name>jreynolds/selenium</name>
                            <build>
                                <from>elgalu/selenium</from>
                            </build>
                            <run>
                                <log>
                                    <prefix>Selenium</prefix>
                                    <color>yellow</color>
                                </log>

                                <!--<env>-->
                                <!--<VIDEO>true</VIDEO>-->
                                <!--<WAIT_TIMEOUT>60s</WAIT_TIMEOUT>-->
                                <!--</env>-->

                                <!-- Add only if chrome crashes -->
                                <!--<privileged>true</privileged>-->
                                <!--<shmSize>256000000</shmSize>-->

                                <ports>
                                    <port>4444:24444</port>
                                    <port>5900:25900</port>
                                </ports>

                                <!-- add if we need to upload files -->
                                <!--<volumes>-->
                                <!--<bind>-->
                                <!--<volume>${project.basedir}/src/test/e2e:/protractor</volume>-->
                                <!--</bind>-->
                                <!--</volumes>-->
                            </run>
                        </image>
                    </images>
                </configuration>

                <executions>
                    <execution>
                        <id>build</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>4.0.3</version>
                <configuration>
                    <baselineOnMigrate>true</baselineOnMigrate>
                    <url>jdbc:postgresql://${local.ip}:6432/tiatus</url>
                    <user>tiatus</user>
                    <password>tiatus</password>
                    <locations>
                        <location>filesystem:../flyway/src/main/resources/db/migration</location>
                    </locations>
                    <skip>${docker.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>migrate</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>42.7.1</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
